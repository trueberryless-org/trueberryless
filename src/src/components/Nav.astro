---
import Icon from './Icon.astro';
import ThemeToggle from './ThemeToggle.astro';
import type { iconPaths } from './IconPaths';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/' },
	{ label: 'Work', href: '/work/' },
	{ label: 'About', href: '/about/' },
	{ label: 'Resume', href: '/resume.pdf' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: keyof typeof iconPaths }[] = [
  { label: 'GitHub', href: 'https://github.com/trueberryless', icon: 'github-logo' },
	{ label: 'Instagram', href: 'https://www.instagram.com/trueberryless', icon: 'instagram-logo' },
	{ label: 'CodePen', href: 'https://codepen.io/trueberryless', icon: 'codepen-logo' },
	{ label: 'Linktree', href: 'https://linktr.ee/trueberryless', icon: 'linktree-logo' },
];

/** Test if a link is pointing to the current page. */
const isCurrentPage = (href: string) => {
	let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
	if (pathname.at(0) !== '/') pathname = '/' + pathname;
	if (pathname.at(-1) !== '/') pathname += '/';
	return pathname === href || (href !== '/' && pathname.startsWith(href));
};
---

<nav>
	<div class="menu-header">
		<a href="/" class="site-title">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 22 90" width="22" height="90">
        <mask id="a" width="22" height="90" x="0" y="0" maskUnits="userSpaceOnUse" style="mask-type:alpha">
          <path fill="white" fill-rule="evenodd" d="M18.38 1.13c2.65 1.75 4 5.27 2.04 8.99a178.54 178.54 0 0 1-6.94 11.61c-1.34 2.15-3.09 4.97-4.4 7.12.63 4.85 1.44 9.66 2.26 14.9 1.38-.79 3.13-1.8 4.36-2.33.79-.34 1.56-.61 2.27-.73.69-.11 1.46-.1 2.1.3a3.96 3.96 0 0 1 1.87 2.96c.17 1.2-.03 2.6-.44 4.07-.83 2.96-2.63 6.58-4.8 10.4-.7 1.23-1.82 3.12-2.58 4.4.38 3.07.7 5.37.88 8.08.27 3.79.43 7.19.1 9.97-.31 2.75-.88 5.07-2.21 6.52-2.9 3.13-6.63 3.21-9.27 1.48-2.65-1.75-4-5.27-2.04-8.99 1.63-3.1 3.94-6.83 6.36-10.7l.58-.91c1.34-2.15 3.09-4.97 4.4-7.12-.63-4.85-1.44-9.66-2.26-14.9-1.38.79-3.13 1.8-4.36 2.33-.79.34-1.56.61-2.27.73-.69.11-1.46.1-2.1-.3a3.96 3.96 0 0 1-1.87-2.96c-.17-1.2.03-2.6.44-4.07.83-2.96 2.63-6.58 4.8-10.4.7-1.23 1.82-3.12 2.58-4.4-.38-3.07-.7-5.37-.88-8.08-.27-3.79-.43-7.19-.1-9.97.31-2.75.88-5.07 2.21-6.52 2.9-3.13 6.63-3.21 9.27-1.48ZM8.72 25.84c-.25-2.18-.46-4.9-.6-6.87-.26-3.74-.16-7.01.14-9.63.31-2.65 1.07-4.46 1.98-5.44 2.27-2.45 5.22-2.42 7.1-1.19s2.9 3.7 1.42 6.53a176.98 176.98 0 0 1-6.88 11.5 988.8 988.8 0 0 0-3.16 5.1Zm-.44 4.36-1.35 2.32c-2.15 3.8-3.85 7.25-4.61 9.97a8.37 8.37 0 0 0-.4 3.3c.12.78.44 1.29.98 1.61.09.06.32.13.82.04.5-.08 1.1-.28 1.83-.6 1.3-.56 3.2-1.67 4.8-2.59-.74-4.62-1.46-9.63-2.07-14.05Zm3.38 15.55c.73 4.62 1.45 9.63 2.06 14.05l1.35-2.32c2.15-3.8 3.85-7.25 4.61-9.97.38-1.37.5-2.46.4-3.3-.12-.78-.44-1.29-.98-1.61-.09-.06-.32-.13-.82-.04-.5.08-1.1.28-1.83.6-1.3.56-3.2 1.67-4.8 2.59Zm1.62 18.4-3.16 5.11-.58.93c-2.43 3.88-4.7 7.54-6.3 10.57-1.48 2.82-.46 5.3 1.42 6.53 1.88 1.23 4.83 1.26 7.1-1.19.9-.98 1.67-2.79 1.98-5.44.3-2.62.4-5.9.14-9.63-.14-1.97-.35-4.7-.6-6.87Z" clip-rule="evenodd"/>
        </mask>
        <g mask="url(#a)">
          <path class="animated-path" stroke="black" stroke-width="2" d="M2.46 48.2c-6.54-3.97 10.67-26.22 17.08-38.48C22.96 3.2 14.82-2.27 9.7 3.31.74 13 21.26 76.98 12.3 86.69c-5.13 5.58-13.27.11-9.85-6.41 6.41-12.26 23.62-34.51 17.08-38.49C16.6 40 5.4 50 2.46 48.21Z"/>
        </g>
      </svg>
		</a>
		<menu-button>
			<template>
				<button class="menu-button" aria-expanded="false">
					<span class="sr-only">Menu</span>
					<Icon icon="list" />
				</button>
			</template>
		</menu-button>
	</div>
	<noscript>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a aria-current={isCurrentPage(href) ? 'page' : null} class="link" href={href}>
							{label}
						</a>
					</li>
				))
			}
		</ul>
	</noscript>
	<noscript>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
		</div>
	</noscript>
	<div id="menu-content" hidden>
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a aria-current={isCurrentPage(href) ? 'page' : null} class="link" href={href}>
							{label}
						</a>
					</li>
				))
			}
		</ul>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>

			<div class="theme-toggle">
				<ThemeToggle />
			</div>
		</div>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById('menu-content')!;
			menu.hidden = true;
			// Add "menu-content" class in JS to avoid covering content in non-JS browsers.
			menu.classList.add('menu-content');

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
				menu.hidden = !expand;
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menu.hidden));

			// Hide menu button for large screens.
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			const mediaQueries = window.matchMedia('(min-width: 60em)');
			handleViewports(mediaQueries);
			mediaQueries.addEventListener('change', handleViewports);
		}
	}
	customElements.define('menu-button', MenuButton);
</script>

<style>
	nav {
		z-index: 9999;
		position: relative;
		font-family: var(--font-brand);
		font-weight: 500;
		margin-bottom: 3.5rem;
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1.5rem;
	}

	.site-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
	}

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
	}

	.menu-button[aria-expanded='true'] {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	.menu-button[hidden] {
		display: none;
	}

	.menu-button::before {
		position: absolute;
		inset: -1px;
		content: '';
		background: var(--gradient-stroke);
		border-radius: 999rem;
		z-index: -1;
	}

	.menu-content {
		position: absolute;
		left: 0;
		right: 0;
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		font-size: var(--text-md);
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		background-color: var(--gray-999);
		border-bottom: 1px solid var(--gray-800);
	}

	.link {
		display: inline-block;
		color: var(--gray-300);
		text-decoration: none;
	}

	.link[aria-current] {
		color: var(--gray-0);
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;

		display: flex;
		justify-content: space-between;
		gap: 0.75rem;
		padding: 1.5rem 2rem 1.5rem 1.5rem;
		background-color: var(--gray-999);
		border-radius: 0 0 0.75rem 0.75rem;
		box-shadow: var(--shadow-lg);
	}

	.socials {
		display: flex;
		flex-wrap: wrap;
		gap: 0.625rem;
		font-size: var(--icon-size);
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.social:hover,
	.social:focus {
		color: var(--accent-text-over);
	}

	.theme-toggle {
		display: flex;
		align-items: center;
		height: calc(var(--icon-size) + 2 * var(--icon-padding));
	}

	@media (min-width: 60em) {
		nav {
			display: grid;
			grid-template-columns: 1fr auto 1fr;
			align-items: center;
			padding: 2.5rem 5rem;
			gap: 1rem;
		}

		.menu-header {
			padding: 0;
		}

		.site-title {
			font-size: var(--text-lg);
		}

		.menu-content {
			display: contents;
		}

		.nav-items {
			position: relative;
			flex-direction: row;
			font-size: var(--text-sm);
			border-radius: 999rem;
			border: 0;
			padding: 0.5rem 0.5625rem;
			background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
			box-shadow: var(--shadow-md);
		}

		.nav-items::before {
			position: absolute;
			inset: -1px;
			content: '';
			background: var(--gradient-stroke);
			border-radius: 999rem;
			z-index: -1;
		}

		.link {
			padding: 0.5rem 1rem;
			border-radius: 999rem;
			transition:
				color var(--theme-transition),
				background-color var(--theme-transition);
		}

		.link:hover,
		.link:focus {
			color: var(--gray-100);
			background-color: var(--accent-subtle-overlay);
		}

		.link[aria-current='page'] {
			color: var(--accent-text-over);
			background-color: var(--accent-regular);
		}

		.menu-footer {
			--icon-padding: 0.375rem;

			justify-self: flex-end;
			align-items: center;
			padding: 0;
			background-color: transparent;
			box-shadow: none;
		}

		.socials {
			display: none;
		}
	}

	@media (min-width: 70em) {
		.socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}
	}
	@media (forced-colors: active) {
		.link[aria-current='page'] {
			color: SelectedItem;
		}
	}
  
  @media (prefers-reduced-motion) {
    .animated-path {
      animation: none !important;
      stroke-dasharray: unset !important;
    }
  }
  @media print {
    .animated-path {
      animation: none !important;
      stroke-dasharray: unset !important;
    }
  }
  @keyframes grow {
    0% {
      stroke-dashoffset: 1px;
      stroke-dasharray: 0 350px;
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    40% {
      stroke-dasharray: 350px 0;
    }
    85% {
      stroke-dasharray: 350px 0;
    }
    95%,
    to {
      stroke-dasharray: 0 350px;
    }
  }
  .animated-path {
    stroke-dashoffset: 1px;
    stroke-dasharray: 350px 0;
    animation: grow 20s ease forwards infinite;
    transform-origin: center;
    stroke: var(--gray-50);
    animation-delay: 0s;
  }
</style>
